---
apiVersion: v1
kind: ConfigMap
metadata:
  name: streamflow-config
  namespace: streamflow
  labels:
    app.kubernetes.io/name: streamflow
    app.kubernetes.io/instance: streamflow
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: streamflow
    app.kubernetes.io/managed-by: kubectl
data:
  # Database configuration
  DB_HOST: "postgres"
  DB_PORT: "5432"
  DB_NAME: "streamflow"
  DB_USER: "streamflow"
  DB_SSL_MODE: "prefer"
  DB_MAX_CONNECTIONS: "20"
  
  # Redis configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # RabbitMQ configuration
  RABBITMQ_HOST: "rabbitmq"
  RABBITMQ_PORT: "5672"
  RABBITMQ_VHOST: "/"
  RABBITMQ_USER: "streamflow"
  
  # Application configuration
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  CORS_ORIGINS: "https://streamflow.local,http://localhost:3000"
  
  # Service ports
  INGESTION_PORT: "8001"
  ANALYTICS_PORT: "8002"
  ALERTING_PORT: "8003"
  STORAGE_PORT: "8004"
  DASHBOARD_PORT: "8005"
  WEB_UI_PORT: "3000"
  
  # Service URLs (internal)
  INGESTION_URL: "http://streamflow-ingestion:8001"
  ANALYTICS_URL: "http://streamflow-analytics:8002"
  ALERTING_URL: "http://streamflow-alerting:8003"
  STORAGE_URL: "http://streamflow-storage:8004"
  DASHBOARD_URL: "http://streamflow-dashboard:8005"
  
  # Monitoring
  PROMETHEUS_ENABLED: "true"
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: streamflow-secrets
  namespace: streamflow
  labels:
    app.kubernetes.io/name: streamflow
    app.kubernetes.io/instance: streamflow
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: streamflow
    app.kubernetes.io/managed-by: kubectl
type: Opaque
data:
  # Database credentials (base64 encoded)
  DB_PASSWORD: c3RyZWFtZmxvdw==  # streamflow
  
  # Redis credentials
  REDIS_PASSWORD: c3RyZWFtZmxvdw==  # streamflow
  
  # RabbitMQ credentials
  RABBITMQ_PASSWORD: c3RyZWFtZmxvdw==  # streamflow
  
  # Application secrets
  SECRET_KEY: eW91ci1zZWNyZXQta2V5LWNoYW5nZS10aGlz  # your-secret-key-change-this
  JWT_SECRET: and0LXNlY3JldC1rZXktY2hhbmdlLXRoaXM=  # jwt-secret-key-change-this
  
  # External API keys (if needed)
  # EXTERNAL_API_KEY: ""
  # WEBHOOK_SECRET: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: streamflow-nginx-config
  namespace: streamflow
  labels:
    app.kubernetes.io/name: streamflow
    app.kubernetes.io/instance: streamflow
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/component: nginx-config
    app.kubernetes.io/part-of: streamflow
    app.kubernetes.io/managed-by: kubectl
data:
  nginx.conf: |
    upstream backend {
        server streamflow-dashboard:8005;
    }
    
    upstream web_ui {
        server streamflow-web-ui:3000;
    }
    
    server {
        listen 80;
        server_name streamflow.local;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/json
            application/xml+rss;
        
        # API routes
        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Health check endpoints
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket for real-time updates
        location /ws/ {
            proxy_pass http://backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files and main application
        location / {
            proxy_pass http://web_ui/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle client-side routing
            try_files $uri $uri/ /index.html;
        }
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web_ui;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    } 